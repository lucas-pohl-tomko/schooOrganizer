{"remainingRequest":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucario/Documents/schoolOrganizer/frontend-vue/app/src/components/Students/ScheduleTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/src/components/Students/ScheduleTable.vue","mtime":1574518854958},{"path":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport router from \"@/router/\"\n\nexport default {\n  name: \"Schedule\",\n  data() {\n    return {\n      schedules: [],\n      search: '',\n      days: {\n        MONDAY: 'Segunda-feira',\n        TUESDAY: 'Tuesday',\n        WEDNESDAY: 'Wednesday',\n        THURSDAY: 'Thursday',\n        FRIDAY: 'Friday',\n        SATURDAY: 'Saturday',\n      },\n      dialog: false,\n      headers: [\n\n        { text: 'Aluno', value: 'student' },\n        { text: 'Professor', value: 'professor' },\n        { text: 'Horario', value: 'date.time' },\n        { text: 'Dia', value: 'date.dayOfTheWeek' },\n        { text: 'Actions', value: 'action', sortable: false },\n      ],\n      editedIndex: -1,\n      editedItem: {\n        student: '',\n        professor: '',\n        time: 0,\n        day: '',\n      },\n      defaultItem: {\n        studentname: '',\n        professorname: '',\n        time: 0,\n        day: '',\n      },\n\n    };\n  },\n  computed: {\n    formattedSchedules() {\n      return this.schedules.map(schedule => {\n        schedule.date.dayOfTheWeek = this.days[schedule.date.dayOfTheWeek]\n        return schedule\n      })\n    },\n    formTitle () {\n        return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n    },\n  },\n    created() {\n      this.all();\n    },\n  watch: {\n    dialog (val) {\n      val || this.close()\n    },\n  },\n  methods: {\n    all() {\n      axios\n        .request({\n          baseURL: \"http://localhost:8000\",\n          method: \"get\",\n          url: \"/api/schedulestudentsprofessor/\"\n        })\n        .then(response => {\n          this.schedules = response.data\n        });\n      },\n      editItem (item) {\n        this.editedIndex = this.schedules.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialog = true\n      },\n\n\n    deleteItem(item) {\n      if (confirm(\"Excluir \" + item.student)) {\n        axios\n          .delete(`http://localhost:8000/api/schedulestudentsprofessor/destroy/${item.id}`, {\n            headers: {\n              Authorization: `Token ${this.$session.get(\"token\")}`\n            }\n          })\n          .then(response => {\n            this.all()\n            console.log(response)\n          });\n      }\n    },\n      close () {\n        this.dialog = false\n        setTimeout(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        }, 300)\n      },\n\n      save () {\n        if (this.editedIndex > -1) {\n          Object.assign(this.schedules[this.editedIndex], this.editedItem)\n        } else {\n          this.schedules.push(this.editedItem)\n        }\n        this.close()\n    },\n    goToStudent(student){\n      router.push(`/students/edit/${student}`)\n    },\n    goToProfessor(){\n      router.push(`/students`)\n    },\n    \n        },\n  }\n",{"version":3,"sources":["ScheduleTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"ScheduleTable.vue","sourceRoot":"src/components/Students","sourcesContent":["<template>\n  <v-data-table\n    :headers=\"headers\"\n    :items=\"formattedSchedules\"\n    sort-by=\"calories\"\n    class=\"elevation-1\"\n  >\n    <template v-slot:top>\n      <v-toolbar flat color=\"white\">\n        <v-toolbar-title>Horarios</v-toolbar-title>\n        <v-divider\n          class=\"mx-4\"\n          inset\n          vertical\n        ></v-divider>\n        <v-spacer></v-spacer>\n        <v-dialog v-model=\"dialog\" max-width=\"500px\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn color=\"primary\" dark class=\"mb-2\" v-on=\"on\">New Item</v-btn>\n          </template>\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">{{ formTitle }}</span>\n            </v-card-title>\n\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"editedItem.studentname\" label=\"Aluno\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"editedItem.professorname\" label=\"Professor\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"editedItem.time\" label=\"Horario\"></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field v-model=\"editedItem.day\" label=\"Dia\"></v-text-field>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" text @click=\"close\">Cancel</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-toolbar>\n    </template>\n    <template v-slot:item.action=\"{ item }\">\n      <v-icon\n        small\n        class=\"mr-2\"\n        @click=\"editItem(item)\"\n      >\n        edit\n      </v-icon>\n      <v-icon\n        small\n        @click=\"deleteItem(item)\"\n      >\n        delete\n      </v-icon>\n    </template>\n  </v-data-table>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport router from \"@/router/\"\n\nexport default {\n  name: \"Schedule\",\n  data() {\n    return {\n      schedules: [],\n      search: '',\n      days: {\n        MONDAY: 'Segunda-feira',\n        TUESDAY: 'Tuesday',\n        WEDNESDAY: 'Wednesday',\n        THURSDAY: 'Thursday',\n        FRIDAY: 'Friday',\n        SATURDAY: 'Saturday',\n      },\n      dialog: false,\n      headers: [\n\n        { text: 'Aluno', value: 'student' },\n        { text: 'Professor', value: 'professor' },\n        { text: 'Horario', value: 'date.time' },\n        { text: 'Dia', value: 'date.dayOfTheWeek' },\n        { text: 'Actions', value: 'action', sortable: false },\n      ],\n      editedIndex: -1,\n      editedItem: {\n        student: '',\n        professor: '',\n        time: 0,\n        day: '',\n      },\n      defaultItem: {\n        studentname: '',\n        professorname: '',\n        time: 0,\n        day: '',\n      },\n\n    };\n  },\n  computed: {\n    formattedSchedules() {\n      return this.schedules.map(schedule => {\n        schedule.date.dayOfTheWeek = this.days[schedule.date.dayOfTheWeek]\n        return schedule\n      })\n    },\n    formTitle () {\n        return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n    },\n  },\n    created() {\n      this.all();\n    },\n  watch: {\n    dialog (val) {\n      val || this.close()\n    },\n  },\n  methods: {\n    all() {\n      axios\n        .request({\n          baseURL: \"http://localhost:8000\",\n          method: \"get\",\n          url: \"/api/schedulestudentsprofessor/\"\n        })\n        .then(response => {\n          this.schedules = response.data\n        });\n      },\n      editItem (item) {\n        this.editedIndex = this.schedules.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialog = true\n      },\n\n\n    deleteItem(item) {\n      if (confirm(\"Excluir \" + item.student)) {\n        axios\n          .delete(`http://localhost:8000/api/schedulestudentsprofessor/destroy/${item.id}`, {\n            headers: {\n              Authorization: `Token ${this.$session.get(\"token\")}`\n            }\n          })\n          .then(response => {\n            this.all()\n            console.log(response)\n          });\n      }\n    },\n      close () {\n        this.dialog = false\n        setTimeout(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        }, 300)\n      },\n\n      save () {\n        if (this.editedIndex > -1) {\n          Object.assign(this.schedules[this.editedIndex], this.editedItem)\n        } else {\n          this.schedules.push(this.editedItem)\n        }\n        this.close()\n    },\n    goToStudent(student){\n      router.push(`/students/edit/${student}`)\n    },\n    goToProfessor(){\n      router.push(`/students`)\n    },\n    \n        },\n  }\n</script>"]}]}