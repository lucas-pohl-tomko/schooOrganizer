{"remainingRequest":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucario/Documents/schoolOrganizer/frontend-vue/app/src/components/Professors/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/src/components/Professors/List.vue","mtime":1575001586897},{"path":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lucario/Documents/schoolOrganizer/frontend-vue/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\nimport router from \"@/router/\"\nimport CreateProfessor from \"./Create\";\n\nexport default {\n  name: \"ListProfessor\",\n  data() {\n    return {\n      professors: [],\n      authenticated: false,\n    };\n  },\n  components: {\n    CreateProfessor: CreateProfessor,\n  },\n  created() {\n    this.all();\n  },\n  mounted() {\n    this.checkAuthenticated();\n  },\n  methods: {\n    all() {\n      axios\n        .request({\n          baseURL: \"http://localhost:8000\",\n          method: \"get\",\n          url: \"/api/professors/\"\n        })\n        .then(response => {\n          this.professors = response.data\n          console.log(response)\n        });\n      \n    },\n    checkAuthenticated() {\n      this.$session.start();\n      if (!this.$session.has(\"token\")) {\n        router.push(\"/login\");\n      } else {\n        this.authenticated = true;\n      }\n    },\n    deleteProfessor(professor) {\n      if (confirm(\"Excluir \" + professor.first_name)) {\n        axios\n          .delete(`http://localhost:8000/api/professors/${professor.id}`, {\n            headers: {\n              Authorization: `Token ${this.$session.get(\"token\")}`\n            }\n          })\n          .then(response => {\n            this.all()\n            console.log(response)\n          });\n      }\n    },\n    editProfessor(professor) {\n      router.push(`/professors/edit/${professor.id}`)\n    }\n  }\n};\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components/Professors","sourcesContent":["<template>\n  <!-- <v-container>\n\n        <div v-for=\"professor in professors\" v-bind:key=\"professor.id\">\n          <p>Professor: {{professor.first_name}} {{professor.middle_name}} {{professor.last_name}}</p>\n          <v-btn class=\"ma-2\" text icon color=\"red lighten-2\">\n            <v-icon class=\"delete\" @click=\"deleteProfessor(professor)\"></v-icon>\n          </v-btn>\n          <v-btn class=\"ma-2\" text icon color=\"green\">\n            <v-icon class=\"edit\" @click=\"editProfessor(professor)\"></v-icon>\n          </v-btn>\n          <v-divider></v-divider>\n        </div>\n\n      <CreateProfessor @updateProfessors=\"all\"></CreateProfessor>\n  </v-container> -->\n</template>\n<template>\n\n  <v-container>\n   <v-row no-gutters>\n      <v-col\n        v-for=\"professor in professors\" \n        v-bind:key=\"professor.id\"\n        cols=\"12\"\n        sm=\"4\"\n      >\n    <v-card\n      class=\"mx-auto\"\n      max-width=\"344\"\n      outlined\n    >\n      <v-list-item three-line>\n        <v-list-item-content>\n          <div class=\"overline mb-4\">Professor</div>\n          <v-list-item-title class=\"headline mb-1\">{{professor.first_name}} {{professor.middle_name}} {{professor.last_name}}</v-list-item-title>\n          <div v-for=\"professor in student.professors\" v-bind:key=\"professor.id\">\n            <v-list-item-subtitle>Professor: {{professor}}</v-list-item-subtitle>\n          </div>        \n        </v-list-item-content>\n      </v-list-item>\n\n      <v-card-actions>\n          <v-btn class=\"ma-2\" text icon color=\"red lighten-2\">\n            <v-icon class=\"delete\" @click=\"deleteProfessor(professor)\"></v-icon>\n          </v-btn>\n          <v-btn class=\"ma-2\" text icon color=\"green\">\n            <v-icon class=\"edit\" @click=\"editProfessor(professor)\"></v-icon>\n          </v-btn>\n      </v-card-actions>\n    </v-card>\n    </v-col>\n    </v-row>\n      <CreateProfessor @updateProfessors=\"all\"></CreateProfessor>\n  </v-container>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport router from \"@/router/\"\nimport CreateProfessor from \"./Create\";\n\nexport default {\n  name: \"ListProfessor\",\n  data() {\n    return {\n      professors: [],\n      authenticated: false,\n    };\n  },\n  components: {\n    CreateProfessor: CreateProfessor,\n  },\n  created() {\n    this.all();\n  },\n  mounted() {\n    this.checkAuthenticated();\n  },\n  methods: {\n    all() {\n      axios\n        .request({\n          baseURL: \"http://localhost:8000\",\n          method: \"get\",\n          url: \"/api/professors/\"\n        })\n        .then(response => {\n          this.professors = response.data\n          console.log(response)\n        });\n      \n    },\n    checkAuthenticated() {\n      this.$session.start();\n      if (!this.$session.has(\"token\")) {\n        router.push(\"/login\");\n      } else {\n        this.authenticated = true;\n      }\n    },\n    deleteProfessor(professor) {\n      if (confirm(\"Excluir \" + professor.first_name)) {\n        axios\n          .delete(`http://localhost:8000/api/professors/${professor.id}`, {\n            headers: {\n              Authorization: `Token ${this.$session.get(\"token\")}`\n            }\n          })\n          .then(response => {\n            this.all()\n            console.log(response)\n          });\n      }\n    },\n    editProfessor(professor) {\n      router.push(`/professors/edit/${professor.id}`)\n    }\n  }\n};\n</script>"]}]}